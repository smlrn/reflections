
What happens when you initialize a repository?  Why do you need to do it?

A .git folder is created.  This is how the metadeta structure and different commits are stored.


How is the staging area different from the working directory and the repository?  What value do you think it offers?

The staging area is temporary space used to update the repository.  The working directory contains all of the files and folders that are being worked on.


How can you use the staging area to make sure you have one commit per logical change?

After making a logical change, use git add and then git commit.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Incorporating an experimental feature, removing pieces of code that may not be necessary to check if the overall codebase can be reduced, testing someone else's version to compare with your version.  The different versions of code can be run side by side or one after another.


How do the diagrams help you visualize the branch structure?

They show you the paths that branches and commits can take.  You also get to see where any detached heads occur.


What is the result of merging two branches together?  Why do we represent it in the diagrams the way we do?

There is a history that splits between the two branches from the master.  It's represented in the diagram that way in order to help visualize the paths.


What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Minimize and control mistakes.